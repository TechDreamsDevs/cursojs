{\rtf1\ansi\ansicpg1252\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\colortbl ;\red0\green0\blue255;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\ul\b\f0\fs22\lang22 CURSO DE JAVASCRIPT\ulnone\b0\par
github.com/gustavoguanabara\par
gustavoguanabara.github.io\par
cursoemvideo.com\par
\par
\b Banco de Imagens:\par
{{\field{\*\fldinst{HYPERLINK https://www.pexels.com/pt-br/ }}{\fldrslt{https://www.pexels.com/pt-br/\ul0\cf0}}}}\f0\fs22\par
Banco de Emojis:\par
{{\field{\*\fldinst{HYPERLINK https://unicode.org/emoji/charts/full-emoji-list.html }}{\fldrslt{https://unicode.org/emoji/charts/full-emoji-list.html\ul0\cf0}}}}\f0\fs22\par
\b0 ----------------------------------------\par
\ul\b Comandos em Javascript :\ulnone\b0\par
window.alert = mostrar alerta na tela\par
window.confirm = mostrar uma mensagem de confirma\'e7\'e3o na tela\par
window.prompt = mostrar uma pergunta na tela\par
// = comentar na mesma linha\par
/*  */ = comentar mais de uma linha de c\'f3digo\par
var ou let = criar uma vari\'e1vel\par
null = significa que a vari\'e1vel ir\'e1 ficar v\'e1zia\par
+ = concatena\'e7\'e3o\par
Number.parseInt(n) = convers\'e3o de n\'famero para n\'famero inteiro.\par
Number.parseFloat(n) = convers\'e3o de um n\'famero para n\'famero real ( n\'famero com virgula ).\par
Number(n) = O pr\'f3prio sistema faz a convers\'e3o para n\'famero\par
String(n) ou n.toString()  = convers\'e3o para string\par
$\{ \} = placeholder = para realizar a interpola\'e7\'e3o\par
length = mostrar quantos caracteres tem a string\par
toUpperCase() = para deixar todas as letras mai\'fasculas\par
toLowerCase() = para deixar todas as letras min\'fasculas\par
document.Write = escrever na tela\par
toFixed("n\'famero de casas") = para formatar n\'fameros\par
replace( " " , " " ) = trocar uma coisa por outra\par
toLocaleString('pt-br', \{style: 'currency',  currency: 'BRL'\})\par
getElementsBy .... ()["numero do elemento"] = para selecionar um elemento por tag, id, nome ou classe.\par
querySelector() || querySelectorAll() = para selecionar um elemento por seletor ( Quando for ID #, quando for Class . ) \par
innerText = Inserir como Texto no elemento selecionado\par
innerHtml = Inserir como Html ( com a formata\'e7\'e3o ) no elemento selecionado\par
style = mudar o "estilo" do elemento selecionado\par
function = conjunto de c\'f3digos ( bloco ) para criar uma fun\'e7\'e3o ( exemplo: um evento )\par
addEventListener() =  adicionar um "ouvidor" de eventos\par
value = pegar o valor que est\'e1 dentro do elemento\par
if ( condi\'e7\'e3o ) = se\par
else ( condi\'e7\'e3o ) = se n\'e3o\par
else if ( condi\'e7\'e3o ) = se n\'e3o se\par
console.log = escrever no console\par
new Date() = convers\'e3o em data\par
vari\'e1vel (convertida).getFullYear() = para pegar a data atual\par
vari\'e1vel (convertida).getHours() =  para pegar a hora ( possui diversas op\'e7\'f5es, por exemplo o getDay() )\par
switch ( express\'e3o ) =  interruptor ( testar a express\'e3o ) Obs* S\'f3 funciona com n\'fameros inteiros ou Strings\par
img.src = ''  = para inserir uma imagem\par
document.createElement() = para criar uma elemento\par
vari\'e1vel.setAttribute('id' , 'foto') = para criar um elemento com id\par
vari\'e1vel.appendChild() = para adicionar um elemento filho\par
while(condi\'e7\'e3o) = enquanto\par
do = fazer\par
for ( inicio ; teste ; incremento ) = para\par
\\u\{ \} = formata\'e7\'e3o unicode para javascript\par
let = []  = var\'edavel composta\par
var\'edavel composta[] = para incluir um valor na vari\'e1vel\par
var\'edavel.push() = vai acrescentar um valor na ultima chave(indice)\par
vari\'e1vel.length = para saber o comprimento da vari\'e1vel composta.\par
vari\'e1vel.sort() = coloca os elementos em ordem crescente.  \par
vari\'e1vel.indexOf() = para buscar um elemento dentro de um vetor(vari\'e1vel composta)\par
\ul\b Data Types / Tipos primitivos:\ulnone\b0\par
number\par
\tab infinity\par
\tab NaN\par
string\par
boolean\par
null\par
undefined\par
object\par
\tab Array\par
function\par
\par
\ul\b Operadores\par
\ulnone\i aritm\'e9ticos\b0\i0\par
\tab + = soma\par
\tab  - = subtra\'e7\'e3o\par
\tab  * = multiplica\'e7\'e3o\par
\tab  / = divis\'e3o\par
\tab  % = resto da divis\'e3o\par
\tab  ** = pot\'eancia\par
\tab\tab\b\i Ordem de Preced\'eancia\b0\i0\par
\tab\tab\tab ()\par
\tab\tab\tab **\par
\tab\tab\tab * / %\par
\tab\tab\tab + - \par
\b\i atribui\'e7\'e3o\b0\i0\par
\tab var a = 5 + 3       = 8\par
\tab var b = a % 5      = 3\par
\tab var c = 5 * b ** 2      = 45 \par
\tab var d = 10 - a / 2      = 6\par
\tab var e = 6 * 2 / d       = 2 \par
\tab var f = b % e + 4 / e       = 3\par
\tab\tab\b\i Auto-atribui\'e7\'e3o\b0\i0\par
\tab\tab var n = 3\par
\tab\tab n = n + 4       = 7        ||  n += 4\par
\tab\tab n = n - 5     = 2           || n -= 5\par
\tab\tab n = n * 4    = 8\tab        || n *= 4\par
\tab\tab n = n / 2    = 4            || n /= 2\par
\tab\tab n = n ** 2   = 16\tab         || n **= 2\par
\tab\tab n = n % 5   = 1             || n %= 5\par
\tab\tab\tab\b\i Pr\'e9-Incremento\b0\i0\tab\tab\tab\tab\par
\tab\tab\tab var x = 5\par
\tab\tab\tab x = x + 1           = 6      ||  ++x\par
\tab\tab\tab x = x - 1            = 5      ||  --x \par
\tab\tab\tab\b\i P\'f3s-Incremento\b0\i0\par
\tab\tab\tab var x = 5\par
\tab\tab\tab x = x + 1           = 6      ||  x ++\par
\tab\tab\tab x = x - 1            = 5      ||  x --\par
\b\i relacionais\b0\i0\par
\tab 5 > 2 = true\par
\tab 7 < 4 = false\par
\tab 8 >= 8 = true \par
\tab 9 <= 7 = false\par
\tab 5 == 5 = true \par
\tab 4 != 4 = false\par
\tab\tab Identidade ( Igualdade restrita )\par
\tab\tab 5 == 5 = true\par
\tab\tab 5 == '5' = true\par
\tab\tab 5 === '5' = false\par
\tab\tab 5 === 5 = true\par
\b\i l\'f3gicos\b0\i0\par
\tab ! = nega\'e7\'e3o\par
\tab && = conjun\'e7\'e3o\par
\tab || = disjun\'e7\'e3o\par
\b\i tern\'e1rio\par
\b0\i0\tab ?\par
\tab :\par
\tab\tab teste ? true : false\par
\tab\tab\tab m\'e9dia >= 7.0 ? "Aprovado" : "Reprovado"\par
\b\i Ordem de Preced\'eancia \par
\b0\i0\tab () ** /  ...\par
\tab > < >= ...\par
\tab !\par
\tab &&\par
\tab ||\par
\ul\b Arvore DOM\par
\ulnone\i Elementos:\ul\i0\par
\ulnone\b0\tab Window\par
\tab\tab Location\par
\tab\tab Document\par
\tab\tab History\par
\tab\tab\tab Document \par
\tab\tab\tab\tab Html\par
\tab\tab\tab\tab\tab head\par
\tab\tab\tab\tab\tab body\par
\tab\tab\tab\tab\tab\tab head\par
\tab\tab\tab\tab\tab\tab\tab meta\par
\tab\tab\tab\tab\tab\tab\tab title\par
\tab\tab\tab\tab\tab\tab body\par
\tab\tab\tab\tab\tab\tab\tab h1\par
\tab\tab\tab\tab\tab\tab\tab p\par
\tab\tab\tab\tab\tab\tab\tab p\par
\tab\tab\tab\tab\tab\tab\tab div\par
\tab\tab\tab\tab\tab\tab\tab\tab p\par
\tab\tab\tab\tab\tab\tab\tab\tab\tab strong\par
\b\i Selecionando: \b0\i0\par
\tab por Marca\par
\tab por ID\par
\tab por Nome\par
\tab por Classe\par
\tab por Seletor\par
\ul\b Eventos DOM :\par
{\ulnone\b0{\field{\*\fldinst{HYPERLINK https://developer.mozilla.org/en-US/docs/Web/Events }}{\fldrslt{https://developer.mozilla.org/en-US/docs/Web/Events\ul0\cf0}}}}\ulnone\b0\f0\fs22\par
\ul\b Condi\'e7\'f5es: \par
\ulnone\b0 if (condi\'e7\'e3o) \{\par
\tab TRUE\par
\} else \{\par
\tab FALSE \par
\}\par
\b Tipos de condi\'e7\'f5es:\i\par
\tab Condi\'e7\'e3o Simples:\b0\i0\par
\tab if ( condi\'e7\'e3o ) \{\par
\tab\tab TRUE\par
\tab\}\par
\tab\b\i Condi\'e7\'e3o Composta:\par
\tab\b0\i0 if ( condi\'e7\'e3o ) \{\par
\tab\tab TRUE\par
\tab\} else \{\par
\tab\tab FALSE\par
\tab\}\par
\tab\b\i Condi\'e7\'e3o Aninhada:\par
\tab\b0\i0 if ( cond1 ) \{\par
\tab\tab bloco1\par
\tab\} else \{\par
\tab\tab if (cond2) \{\par
\tab\tab\tab bloco2\par
\tab\tab\} else \{\par
\tab\tab\tab bloco3\par
\tab\tab\}\par
\tab\}\par
\tab\b\i Condi\'e7\'e3o Multipla:\par
\tab\b0\i0 switch (express\'e3o) \{\par
\tab\tab case valor 1:\par
\tab\tab break\par
\tab\tab case valor 2:\par
\tab\tab break\par
\tab\tab case valor 3:\par
\par
\tab\tab defaut:\par
\tab\tab break\par
\tab\}\par
\par
\ul\b Repeti\'e7\'f5es:\par
\ulnone\b0 while (condi\'e7\'e3o) \{\par
TRUE - repete\par
FALSE - encerra\par
\} \par
\tab\b\i Tipos de Repeti\'e7\'f5es:\par
\tab\tab\i0 Repeti\'e7\'e3o reversa:\i\par
\tab\tab\b0\i0 do \{\par
\tab\tab BLOCO\tab\par
\tab\tab\}\par
\tab\tab while (condi\'e7\'e3o)\par
\tab\tab\b Repeti\'e7\'e3o ( Estrutura FOR ):\par
\tab\tab\b0 for (inicio ; teste ; incr ) \{\par
\tab\tab BLOCO\par
\tab\tab\}\par
\par
\ul\b Fun\'e7\'f5es:\ulnone\b0\par
- S\'e3o A\'e7\'f5es executadas assim que s\'e3o chamadas ou em decorr\'eancia de algum evento.\par
- Uma fun\'e7\'e3o pode receber par\'e2metros e retornar um resultado.\par
\tab function a\'e7\'e3o(param)\{\par
\tab\tab return res\par
\tab\}\par
\tab a\'e7\'e3o(5) = chamada = param\'eatro valer\'e1 5.\par
\tab\tab\par
}
 